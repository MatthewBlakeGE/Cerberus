folder = '/home/shuoy/ICRA22_data/dataset2_0908/';
% name convention
%  vio - vins-fushion
%  vilo - wob      vilo no bias correction
%  vilo - wb       vilo with bias correction
%  vilo - wb2      vilo with baseline bias correction

% read vio, vilo wob,  vilo wb,
vio_file = strcat(folder,'vio_0908_forward_stop');
vio_wob_file = strcat(folder,'vilo_0908_forward_stop_redix_no_bias_correction');
vio_wb_file = strcat(folder,'vilo2021-09-09_10-04-12');

% read table 
vio_Tab = readtable(vio_file);
vio_wob_Tab = readtable(vio_wob_file);
vio_wb_Tab = readtable(vio_wb_file);
data_start_idx = 1;
data_end_idx = 1;

% first read time, find the one with minimum range 
vio_time = (vio_Tab.Var1-vio_Tab.Var1(1))/10^9;
vio_wob_time = (vio_wob_Tab.Var1-vio_wob_Tab.Var1(1))/10^9;
vio_wb_time = (vio_wb_Tab.Var1-vio_wb_Tab.Var1(1))/10^9;

times = {vio_time,vio_wob_time,vio_wb_time};
end_time = [vio_time(end) vio_wob_time(end) vio_wb_time(end)];
[M,I] = min(end_time);

ref_time = times{I};

% read groundtruth position
gt_pos_x = interp1(vio_wb_time,vio_wb_Tab.Var12,ref_time);
gt_pos_y = interp1(vio_wb_time,vio_wb_Tab.Var13,ref_time);
gt_pos_z = interp1(vio_wb_time,vio_wb_Tab.Var14,ref_time);

%calculate ground truth velocity
gt_vel_x = (gt_pos_x(2:end) - gt_pos_x(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
gt_vel_y = (gt_pos_y(2:end) - gt_pos_y(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
gt_vel_z = (gt_pos_z(2:end) - gt_pos_z(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
% smooth the velocity
gt_vel_x = movmean(gt_vel_x,5);
gt_vel_y = movmean(gt_vel_y,5);
gt_vel_z = movmean(gt_vel_z,5);


%% read vio pos
% interpolate time to get all pos
vio_pos_x = interp1(vio_time,vio_Tab.Var2,ref_time);
vio_pos_y = interp1(vio_time,vio_Tab.Var3,ref_time);
vio_pos_z = interp1(vio_time,vio_Tab.Var4,ref_time);
% move data to align with ground truth
vio_pos_x = vio_pos_x + gt_pos_x(1) - vio_pos_x(1);
vio_pos_y = vio_pos_y + gt_pos_y(1) - vio_pos_y(1);
vio_pos_z = vio_pos_z + gt_pos_z(1) - vio_pos_z(1);
% rotate data
angle = -1.9/180*pi;
R = [cos(angle)   -sin(angle)  0;
    sin(angle)    cos(angle)  0;
    0                   0     1];
rotated = R * [vio_pos_x';vio_pos_y';vio_pos_z'];
vio_pos_x = rotated(1,:);
vio_pos_y = rotated(2,:);
vio_pos_z = rotated(3,:);

%calculate vio velocity
vio_vel_x = (gt_pos_x(2:end) - gt_pos_x(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
gt_vel_y = (gt_pos_y(2:end) - gt_pos_y(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
gt_vel_z = (gt_pos_z(2:end) - gt_pos_z(1:end-1))./(ref_time(2:end)-ref_time(1:end-1));
% smooth the velocity
gt_vel_x = movmean(gt_vel_x,5);
gt_vel_y = movmean(gt_vel_y,5);
gt_vel_z = movmean(gt_vel_z,5);


%% read vilo wob pos
% interpolate time to get all pos
vio_wob_pos_x = interp1(vio_wob_time,vio_wob_Tab.Var2,ref_time);
vio_wob_pos_y = interp1(vio_wob_time,vio_wob_Tab.Var3,ref_time);
vio_wob_pos_z = interp1(vio_wob_time,vio_wob_Tab.Var4,ref_time);
% move data to align with ground truth
vio_wob_pos_x = vio_wob_pos_x + gt_pos_x(1) - vio_wob_pos_x(1);
vio_wob_pos_y = vio_wob_pos_y + gt_pos_y(1) - vio_wob_pos_y(1);
vio_wob_pos_z = vio_wob_pos_z + gt_pos_z(1) - vio_wob_pos_z(1);
% rotate data
angle = -1.9/180*pi;
R = [cos(angle)   -sin(angle)  0;
    sin(angle)    cos(angle)  0;
    0                   0     1];
rotated = R * [vio_wob_pos_x';vio_wob_pos_y';vio_wob_pos_z'];
vio_wob_pos_x = rotated(1,:);
vio_wob_pos_y = rotated(2,:);
vio_wob_pos_z = rotated(3,:);

%% read vilo wb pos
% interpolate time to get all pos
vio_wb_pos_x = interp1(vio_wb_time,vio_wb_Tab.Var2,ref_time);
vio_wb_pos_y = interp1(vio_wb_time,vio_wb_Tab.Var3,ref_time);
vio_wb_pos_z = interp1(vio_wb_time,vio_wb_Tab.Var4,ref_time);
% move data to align with ground truth
vio_wb_pos_x = vio_wb_pos_x + gt_pos_x(1) - vio_wb_pos_x(1);
vio_wb_pos_y = vio_wb_pos_y + gt_pos_y(1) - vio_wb_pos_y(1);
vio_wb_pos_z = vio_wb_pos_z + gt_pos_z(1) - vio_wb_pos_z(1);
% rotate data
angle = -1.9/180*pi;
R = [cos(angle)   -sin(angle)  0;
    sin(angle)    cos(angle)  0;
    0                   0     1];
rotated = R * [vio_wb_pos_x';vio_wb_pos_y';vio_wb_pos_z'];
vio_wb_pos_x = rotated(1,:);
vio_wb_pos_y = rotated(2,:);
vio_wb_pos_z = rotated(3,:);

% angle = 3.9/180*pi;
% R = [cos(angle)  0  -sin(angle) ;
%     0  1  0  ;
%     sin(angle)           0        cos(angle)];
% rotated = R * [vio_wb_pos_x;vio_wb_pos_y;vio_wb_pos_z];
% vio_wb_pos_x = rotated(1,:);
% vio_wb_pos_y = rotated(2,:);
% vio_wb_pos_z = rotated(3,:);


%% plot all z pos
figure(1);hold on;
plot(ref_time, gt_pos_z,'LineWidth',2);
plot(ref_time, vio_pos_z,'LineWidth',2);
plot(ref_time, vio_wob_pos_z,'LineWidth',2);
plot(ref_time, vio_wb_pos_z,'LineWidth',2);
legend('Ground Truth', 'VIO', "VILO+NoBiasCorrect", "VILO+BiasCorrect", 'Location','southeast')
hold off;

%% plot all trajectory 
figure(2);
plot3(gt_pos_x, gt_pos_y, gt_pos_z,'LineWidth',2);hold on;
plot3(vio_pos_x, vio_pos_y, vio_pos_z,'LineWidth',2);hold on;
plot3(vio_wob_pos_x, vio_wob_pos_y, vio_wob_pos_z,'LineWidth',2);hold on;
plot3(vio_wb_pos_x, vio_wb_pos_y, vio_wb_pos_z,'LineWidth',2);hold off;
axis equal
legend('Ground Truth', 'VIO', "VILO+NoBiasCorrect", "VILO+BiasCorrect", 'Location','southeast')

% % read vio with leg with _bias_correction
% file = strcat(folder,'vilo_with_leg_bias_0907_best2.csv');
% % file = strcat(folder,'vio_wlwb_0903_forward_backward_reidx_with_gt2.csv');
% T = readtable(file);
% data_end_idx = size(T.Var1,1)-1;
% t_wlwb = (T.Var1(data_start_idx:data_end_idx)-T.Var1(data_start_idx))/10^9;
% vio_wlwb_pos_x = T.Var2(data_start_idx:data_end_idx);
% vio_wlwb_pos_y = T.Var3(data_start_idx:data_end_idx);
% vio_wlwb_pos_z = T.Var4(data_start_idx:data_end_idx);
% 
% % move gt to align with vio
% offset_x =  T.Var2(data_start_idx) - T.Var12(data_start_idx)
% offset_y =  T.Var3(data_start_idx) - T.Var13(data_start_idx)
% offset_z =  T.Var4(data_start_idx) - T.Var14(data_start_idx)
% 
% vio_wlwb_gt_pos_x = T.Var12(data_start_idx:data_end_idx) + offset_x;
% vio_wlwb_gt_pos_y = T.Var13(data_start_idx:data_end_idx) + offset_y;
% vio_wlwb_gt_pos_z = T.Var14(data_start_idx:data_end_idx) + offset_z;
% 
% R = [cos(angle)   -sin(angle)  0;
%     sin(angle)    cos(angle)  0;
%     0                   0     1];
% rotated = R * [vio_wlwb_pos_x';vio_wlwb_pos_y';vio_wlwb_pos_z'];
% vio_wlwb_pos_x = rotated(1,:);
% vio_wlwb_pos_y = rotated(2,:);
% vio_wlwb_pos_z = rotated(3,:);
% 
% plot(t_wlwb, vio_wlwb_pos_z,'LineWidth',2);hold on;
% 
% % read vio with leg with _bias_correction
% file = strcat(folder,'vio.csv');
% % file = strcat(folder,'vio_wlwb_0903_forward_backward_reidx_with_gt2.csv');
% T = readtable(file);
% data_end_idx = size(T.Var1,1)-1;
% t_wlwob = (T.Var1(data_start_idx:data_end_idx)-T.Var1(data_start_idx))/10^9;
% vio_wlwob_pos_x = T.Var2(data_start_idx:data_end_idx);
% vio_wlwob_pos_y = T.Var3(data_start_idx:data_end_idx);
% vio_wlwob_pos_z = T.Var4(data_start_idx:data_end_idx);
% 
% % move gt to align with vio
% offset_x =  T.Var2(data_start_idx) - T.Var12(data_start_idx)
% offset_y =  T.Var3(data_start_idx) - T.Var13(data_start_idx)
% offset_z =  T.Var4(data_start_idx) - T.Var14(data_start_idx)
% 
% vio_wlwob_gt_pos_x = T.Var12(data_start_idx:data_end_idx) + offset_x;
% vio_wlwob_gt_pos_y = T.Var13(data_start_idx:data_end_idx) + offset_y;
% vio_wlwob_gt_pos_z = T.Var14(data_start_idx:data_end_idx) + offset_z;
% 
% R = [cos(angle)   -sin(angle)  0;
%     sin(angle)    cos(angle)  0;
%     0                   0     1];
% rotated = R * [vio_wlwob_pos_x';vio_wlwob_pos_y';vio_wlwob_pos_z'];
% vio_wlwob_pos_x = rotated(1,:);
% vio_wlwob_pos_y = rotated(2,:);
% vio_wlwob_pos_z = rotated(3,:);
% 
% plot(t_wlwob, vio_wlwob_pos_z,'LineWidth',2);hold off;
% 
% legend('Ground Truth', 'VIO', "VILO+Proposed", "VILO+NoBiasCorrect",'Location','southeast')
% 
% figure(2)
% 
% plot3(vio_gt_pos_x, vio_gt_pos_y, vio_gt_pos_z,'LineWidth',2);hold on;
% plot3(vio_pos_x, vio_pos_y, vio_pos_z,'LineWidth',2);hold on;
% plot3(vio_wlwb_pos_x, vio_wlwb_pos_y, vio_wlwb_pos_z,'LineWidth',2);hold on;
% plot3(vio_wlwob_pos_x, vio_wlwob_pos_y, vio_wlwob_pos_z,'LineWidth',2);hold off;
% axis equal
% 
% legend('Ground Truth', 'VIO', "VILO+Proposed", "VILO+NoBiasCorrect",'Location','southeast')
% 
% 
% % pose diff
% % need to interpolate time 
% gt_pos = [vio_gt_pos_x(end);vio_gt_pos_y(end);vio_gt_pos_z(end)];
% vio_ww_pos = [vio_pos_x(end);vio_pos_y(end);vio_pos_z(end)];
% vio_wlwb_pos = [vio_wlwb_pos_x(end);vio_wlwb_pos_y(end);vio_wlwb_pos_z(end)];
% norm(vio_ww_pos - gt_pos)
% norm(vio_wlwb_pos - gt_pos)
